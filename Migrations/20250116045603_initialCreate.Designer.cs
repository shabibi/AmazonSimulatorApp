// <auto-generated />
using System;
using AmazonSimulatorApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AmazonSimulatorApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250116045603_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AmazonSimulatorApp.Data.Category", b =>
                {
                    b.Property<int>("CatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatID"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.Client", b =>
                {
                    b.Property<int>("CID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompletedOrders")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CID");

                    b.HasIndex("UserID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.Order", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"));

                    b.Property<int>("CID")
                        .HasColumnType("int");

                    b.Property<int>("ClientCID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OID");

                    b.HasIndex("ClientCID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.OrderDetail", b =>
                {
                    b.Property<int>("OID")
                        .HasColumnType("int");

                    b.Property<int>("PID")
                        .HasColumnType("int");

                    b.Property<int>("OrderOID")
                        .HasColumnType("int");

                    b.Property<int>("ProductPID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OID", "PID");

                    b.HasIndex("OrderOID");

                    b.HasIndex("ProductPID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.Product", b =>
                {
                    b.Property<int>("PID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PID"));

                    b.Property<int>("CatID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryCatID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SID")
                        .HasColumnType("int");

                    b.Property<int>("SellerSID")
                        .HasColumnType("int");

                    b.HasKey("PID");

                    b.HasIndex("CategoryCatID");

                    b.HasIndex("SellerSID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.ProductReview", b =>
                {
                    b.Property<int>("RID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RID"));

                    b.Property<int>("CID")
                        .HasColumnType("int");

                    b.Property<int>("ClientCID")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PID")
                        .HasColumnType("int");

                    b.Property<int>("ProductPID")
                        .HasColumnType("int");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.HasKey("RID");

                    b.HasIndex("ClientCID");

                    b.HasIndex("ProductPID");

                    b.ToTable("ProductReviews");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.Seller", b =>
                {
                    b.Property<int>("SID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SID"));

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("UID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("SID");

                    b.HasIndex("UserID");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.Client", b =>
                {
                    b.HasOne("AmazonSimulatorApp.Data.User", "User")
                        .WithMany("Clients")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.Order", b =>
                {
                    b.HasOne("AmazonSimulatorApp.Data.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.OrderDetail", b =>
                {
                    b.HasOne("AmazonSimulatorApp.Data.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderOID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazonSimulatorApp.Data.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductPID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.Product", b =>
                {
                    b.HasOne("AmazonSimulatorApp.Data.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryCatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazonSimulatorApp.Data.Seller", "Seller")
                        .WithMany("Products")
                        .HasForeignKey("SellerSID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.ProductReview", b =>
                {
                    b.HasOne("AmazonSimulatorApp.Data.Client", "Client")
                        .WithMany("ProductReviews")
                        .HasForeignKey("ClientCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazonSimulatorApp.Data.Product", "Product")
                        .WithMany("ProductReviews")
                        .HasForeignKey("ProductPID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.Seller", b =>
                {
                    b.HasOne("AmazonSimulatorApp.Data.User", "User")
                        .WithMany("Sellers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.Client", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ProductReviews");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.Product", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("ProductReviews");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.Seller", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("AmazonSimulatorApp.Data.User", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Sellers");
                });
#pragma warning restore 612, 618
        }
    }
}
